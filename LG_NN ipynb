{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3.6.7 (v3.6.7:6ec5cf24b7, Oct 20 2018, 03:02:14) \n",
      "[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)]\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from scipy import stats\n",
    "import sys\n",
    "print(sys.version)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "from imblearn.over_sampling import SMOTE\n",
    "\n",
    "def smoteOverSamling(train,nn,r):\n",
    "    sm = SMOTE(random_state=42, k_neighbors = nn, ratio = r)\n",
    "    return sm.fit_sample(train.drop('fraud',axis=1), train['fraud'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "def my_custom_loss_func(y_true, y_pred):\n",
    "    cm = confusion_matrix(y_true,y_pred)\n",
    "    print(cm)\n",
    "    tn, fp, fn, tp = cm.ravel()\n",
    "    score = ((-25)*fp + (-5)*fn + 5*tp) / len(y_true)\n",
    "    return (score)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import MinMaxScaler\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.preprocessing import FunctionTransformer\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.preprocessing import FunctionTransformer\n",
    "\n",
    "def normalization(train):\n",
    "    feature_scaler = StandardScaler()\n",
    "    X_scaled = pd.DataFrame(feature_scaler.fit_transform(train.values), columns=train.columns, index=train.index)\n",
    "    return X_scaled\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/ipykernel_launcher.py:16: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  app.launch_new_instance()\n"
     ]
    }
   ],
   "source": [
    "from keras.models import Sequential\n",
    "from keras.layers import Dense\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import confusion_matrix\n",
    "\n",
    "\n",
    "\n",
    "train_pure=pd.read_csv('train.csv',sep=',',index_col=0)\n",
    "x_pure= train_pure.drop('fraud',axis=1)\n",
    "y_pure= train_pure['fraud']\n",
    "\n",
    "x_train, x_holdout, y_train, y_holdout = train_test_split(x_pure, y_pure, test_size=0.2, random_state=324)\n",
    "\n",
    "train=x_train\n",
    "train['fraud']= y_train\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "x, y =   smoteOverSamling(train,1,0.3)\n",
    "x_val, y_val = x_holdout, y_holdout"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/ipykernel_launcher.py:6: UserWarning: The `nb_epoch` argument in `fit` has been renamed `epochs`.\n",
      "  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train on 1851 samples, validate on 376 samples\n",
      "Epoch 1/10\n",
      "1851/1851 [==============================] - 1s 415us/step - loss: 11.4166 - val_loss: 13.6642\n",
      "Epoch 2/10\n",
      "1851/1851 [==============================] - 0s 27us/step - loss: 11.1984 - val_loss: 13.3728\n",
      "Epoch 3/10\n",
      "1851/1851 [==============================] - 0s 25us/step - loss: 10.8923 - val_loss: 12.8600\n",
      "Epoch 4/10\n",
      "1851/1851 [==============================] - 0s 25us/step - loss: 10.5119 - val_loss: 12.0741\n",
      "Epoch 5/10\n",
      "1851/1851 [==============================] - 0s 33us/step - loss: 9.6957 - val_loss: 10.6280\n",
      "Epoch 6/10\n",
      "1851/1851 [==============================] - 0s 24us/step - loss: 7.9812 - val_loss: 7.0813\n",
      "Epoch 7/10\n",
      "1851/1851 [==============================] - 0s 25us/step - loss: 4.2834 - val_loss: 1.3216\n",
      "Epoch 8/10\n",
      "1851/1851 [==============================] - 0s 24us/step - loss: 3.3359 - val_loss: 1.7773\n",
      "Epoch 9/10\n",
      "1851/1851 [==============================] - 0s 23us/step - loss: 3.2376 - val_loss: 1.3505\n",
      "Epoch 10/10\n",
      "1851/1851 [==============================] - 0s 24us/step - loss: 3.1346 - val_loss: 1.2519\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x14012c518>"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "# Logistic Regression\n",
    "model = Sequential()\n",
    "model.add(Dense(1, activation='sigmoid', input_dim=x.shape[1]))\n",
    "model.compile(optimizer='rmsprop', loss='binary_crossentropy')\n",
    "model.fit(x, y, nb_epoch=10, validation_data=(x_val, y_val))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[351   0]\n",
      " [ 25   0]]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "-0.3324468085106383"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred = model.predict(x_holdout).astype(int)\n",
    "my_custom_loss_func(y_holdout,y_pred)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/ipykernel_launcher.py:5: UserWarning: Update your `Dense` call to the Keras 2 API: `Dense(1, activation=\"sigmoid\", input_dim=20, kernel_regularizer=<keras.reg...)`\n",
      "  \"\"\"\n",
      "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/ipykernel_launcher.py:7: UserWarning: The `nb_epoch` argument in `fit` has been renamed `epochs`.\n",
      "  import sys\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train on 1851 samples, validate on 376 samples\n",
      "Epoch 1/100\n",
      "1851/1851 [==============================] - 1s 410us/step - loss: 4.3372 - val_loss: 1.6655\n",
      "Epoch 2/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.3222 - val_loss: 1.6517\n",
      "Epoch 3/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 4.3114 - val_loss: 1.6417\n",
      "Epoch 4/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.3026 - val_loss: 1.6315\n",
      "Epoch 5/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 4.2938 - val_loss: 1.6201\n",
      "Epoch 6/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 4.2826 - val_loss: 1.6104\n",
      "Epoch 7/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 4.2726 - val_loss: 1.6016\n",
      "Epoch 8/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.2638 - val_loss: 1.5937\n",
      "Epoch 9/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.2549 - val_loss: 1.5861\n",
      "Epoch 10/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.2464 - val_loss: 1.5794\n",
      "Epoch 11/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.2383 - val_loss: 1.5723\n",
      "Epoch 12/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.2295 - val_loss: 1.5659\n",
      "Epoch 13/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.2219 - val_loss: 1.5596\n",
      "Epoch 14/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.2136 - val_loss: 1.5537\n",
      "Epoch 15/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.2062 - val_loss: 1.5483\n",
      "Epoch 16/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.1988 - val_loss: 1.5429\n",
      "Epoch 17/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.1915 - val_loss: 1.5374\n",
      "Epoch 18/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.1840 - val_loss: 1.5313\n",
      "Epoch 19/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.1731 - val_loss: 1.5258\n",
      "Epoch 20/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.1636 - val_loss: 1.5203\n",
      "Epoch 21/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 4.1545 - val_loss: 1.5152\n",
      "Epoch 22/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.1450 - val_loss: 1.5104\n",
      "Epoch 23/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.1369 - val_loss: 1.5060\n",
      "Epoch 24/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.1284 - val_loss: 1.5018\n",
      "Epoch 25/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.1206 - val_loss: 1.4980\n",
      "Epoch 26/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.1132 - val_loss: 1.4946\n",
      "Epoch 27/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 4.1070 - val_loss: 1.4914\n",
      "Epoch 28/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.1004 - val_loss: 1.4887\n",
      "Epoch 29/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.0951 - val_loss: 1.4861\n",
      "Epoch 30/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 4.0897 - val_loss: 1.4838\n",
      "Epoch 31/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.0841 - val_loss: 1.4816\n",
      "Epoch 32/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.0782 - val_loss: 1.4796\n",
      "Epoch 33/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.0713 - val_loss: 1.4776\n",
      "Epoch 34/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.0621 - val_loss: 1.4759\n",
      "Epoch 35/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.0527 - val_loss: 1.4743\n",
      "Epoch 36/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 4.0434 - val_loss: 1.4731\n",
      "Epoch 37/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.0367 - val_loss: 1.4721\n",
      "Epoch 38/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.0311 - val_loss: 1.4712\n",
      "Epoch 39/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 4.0260 - val_loss: 1.4686\n",
      "Epoch 40/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.0209 - val_loss: 1.4594\n",
      "Epoch 41/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.0158 - val_loss: 1.4502\n",
      "Epoch 42/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 4.0111 - val_loss: 1.4404\n",
      "Epoch 43/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.0057 - val_loss: 1.4311\n",
      "Epoch 44/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 4.0007 - val_loss: 1.4258\n",
      "Epoch 45/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 3.9956 - val_loss: 1.4249\n",
      "Epoch 46/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.9909 - val_loss: 1.4245\n",
      "Epoch 47/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.9868 - val_loss: 1.4241\n",
      "Epoch 48/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.9827 - val_loss: 1.4227\n",
      "Epoch 49/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.9792 - val_loss: 1.4216\n",
      "Epoch 50/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.9757 - val_loss: 1.4231\n",
      "Epoch 51/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.9718 - val_loss: 1.4217\n",
      "Epoch 52/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.9681 - val_loss: 1.4207\n",
      "Epoch 53/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 3.9643 - val_loss: 1.4189\n",
      "Epoch 54/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.9603 - val_loss: 1.4183\n",
      "Epoch 55/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.9569 - val_loss: 1.4174\n",
      "Epoch 56/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 3.9534 - val_loss: 1.4162\n",
      "Epoch 57/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.9499 - val_loss: 1.4153\n",
      "Epoch 58/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.9465 - val_loss: 1.4145\n",
      "Epoch 59/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 3.9432 - val_loss: 1.4135\n",
      "Epoch 60/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 3.9397 - val_loss: 1.4123\n",
      "Epoch 61/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.9359 - val_loss: 1.4114\n",
      "Epoch 62/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 3.9325 - val_loss: 1.4105\n",
      "Epoch 63/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.9294 - val_loss: 1.4095\n",
      "Epoch 64/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.9257 - val_loss: 1.4086\n",
      "Epoch 65/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 3.9226 - val_loss: 1.4076\n",
      "Epoch 66/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.9189 - val_loss: 1.4066\n",
      "Epoch 67/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.9154 - val_loss: 1.4056\n",
      "Epoch 68/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 3.9119 - val_loss: 1.4047\n",
      "Epoch 69/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.9090 - val_loss: 1.4038\n",
      "Epoch 70/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.9059 - val_loss: 1.4028\n",
      "Epoch 71/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 3.9029 - val_loss: 1.4019\n",
      "Epoch 72/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.8997 - val_loss: 1.4010\n",
      "Epoch 73/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.8969 - val_loss: 1.4001\n",
      "Epoch 74/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.8944 - val_loss: 1.3974\n",
      "Epoch 75/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.8918 - val_loss: 1.3813\n",
      "Epoch 76/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.8894 - val_loss: 1.3630\n",
      "Epoch 77/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 3.8867 - val_loss: 1.3521\n",
      "Epoch 78/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.8844 - val_loss: 1.3505\n",
      "Epoch 79/100\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.8821 - val_loss: 1.3488\n",
      "Epoch 80/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.8798 - val_loss: 1.3474\n",
      "Epoch 81/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.8778 - val_loss: 1.3461\n",
      "Epoch 82/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.8756 - val_loss: 1.3426\n",
      "Epoch 83/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.8735 - val_loss: 1.3406\n",
      "Epoch 84/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.8714 - val_loss: 1.3386\n",
      "Epoch 85/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 3.8695 - val_loss: 1.3363\n",
      "Epoch 86/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 3.8676 - val_loss: 1.3343\n",
      "Epoch 87/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 3.8659 - val_loss: 1.3322\n",
      "Epoch 88/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 3.8639 - val_loss: 1.3302\n",
      "Epoch 89/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 3.8622 - val_loss: 1.3281\n",
      "Epoch 90/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.8606 - val_loss: 1.3264\n",
      "Epoch 91/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.8589 - val_loss: 1.3243\n",
      "Epoch 92/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 3.8575 - val_loss: 1.3225\n",
      "Epoch 93/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 3.8559 - val_loss: 1.3203\n",
      "Epoch 94/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.8542 - val_loss: 1.3182\n",
      "Epoch 95/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 3.8525 - val_loss: 1.3160\n",
      "Epoch 96/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.8509 - val_loss: 1.3139\n",
      "Epoch 97/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.8494 - val_loss: 1.3120\n",
      "Epoch 98/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.8479 - val_loss: 1.3099\n",
      "Epoch 99/100\n",
      "1851/1851 [==============================] - 0s 2us/step - loss: 3.8463 - val_loss: 1.3077\n",
      "Epoch 100/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 3.8450 - val_loss: 1.3059\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x1403c0a20>"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from keras.regularizers import l1_l2\n",
    "reg = l1_l2(l1=0.01, l2=0.01)\n",
    "\n",
    "model = Sequential()\n",
    "model.add(Dense(1, activation='sigmoid', W_regularizer=reg, input_dim=x.shape[1]))\n",
    "model.compile(optimizer='rmsprop', loss='binary_crossentropy')\n",
    "model.fit(x, y, nb_epoch=100,  batch_size=1000,validation_data=(x_val, y_val))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[347   4]\n",
      " [ 24   1]]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "-0.5718085106382979"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred = model.predict(x_holdout).astype(int)\n",
    "my_custom_loss_func(y_holdout,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/ipykernel_launcher.py:12: UserWarning: Update your `Dense` call to the Keras 2 API: `Dense(7, input_dim=20, bias_regularizer=<keras.reg..., kernel_initializer=\"uniform\", kernel_regularizer=<keras.reg...)`\n",
      "  if sys.path[0] == '':\n",
      "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/ipykernel_launcher.py:20: UserWarning: Update your `Dense` call to the Keras 2 API: `Dense(1, activation=\"sigmoid\", input_dim=(7,), bias_regularizer=<keras.reg..., kernel_regularizer=<keras.reg...)`\n",
      "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/ipykernel_launcher.py:23: UserWarning: The `nb_epoch` argument in `fit` has been renamed `epochs`.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train on 1851 samples, validate on 376 samples\n",
      "Epoch 1/100\n",
      "1851/1851 [==============================] - 1s 661us/step - loss: 1.2610 - val_loss: 1.3605\n",
      "Epoch 2/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 1.2270 - val_loss: 1.2560\n",
      "Epoch 3/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 1.1522 - val_loss: 1.1846\n",
      "Epoch 4/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 1.1157 - val_loss: 1.1177\n",
      "Epoch 5/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 1.0696 - val_loss: 1.0860\n",
      "Epoch 6/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 1.0006 - val_loss: 1.0615\n",
      "Epoch 7/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 1.0063 - val_loss: 1.0425\n",
      "Epoch 8/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.9412 - val_loss: 1.0245\n",
      "Epoch 9/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.9291 - val_loss: 1.0202\n",
      "Epoch 10/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.9060 - val_loss: 1.0186\n",
      "Epoch 11/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.9034 - val_loss: 1.0094\n",
      "Epoch 12/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.8632 - val_loss: 1.0233\n",
      "Epoch 13/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.8518 - val_loss: 1.0255\n",
      "Epoch 14/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.8283 - val_loss: 1.0320\n",
      "Epoch 15/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.8446 - val_loss: 1.0430\n",
      "Epoch 16/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.7962 - val_loss: 1.0409\n",
      "Epoch 17/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.7885 - val_loss: 1.0456\n",
      "Epoch 18/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.7804 - val_loss: 1.0139\n",
      "Epoch 19/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.7730 - val_loss: 1.0008\n",
      "Epoch 20/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.8179 - val_loss: 0.9192\n",
      "Epoch 21/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.7879 - val_loss: 0.9484\n",
      "Epoch 22/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.7754 - val_loss: 0.8486\n",
      "Epoch 23/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.7703 - val_loss: 0.7452\n",
      "Epoch 24/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.7694 - val_loss: 0.6730\n",
      "Epoch 25/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.7490 - val_loss: 0.7777\n",
      "Epoch 26/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.7512 - val_loss: 0.8199\n",
      "Epoch 27/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.7306 - val_loss: 0.7954\n",
      "Epoch 28/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.7603 - val_loss: 0.7634\n",
      "Epoch 29/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.7278 - val_loss: 0.7033\n",
      "Epoch 30/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.7350 - val_loss: 0.7677\n",
      "Epoch 31/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.7578 - val_loss: 0.7615\n",
      "Epoch 32/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.7418 - val_loss: 0.8106\n",
      "Epoch 33/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.7345 - val_loss: 0.7677\n",
      "Epoch 34/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.7647 - val_loss: 0.7271\n",
      "Epoch 35/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.7238 - val_loss: 0.7710\n",
      "Epoch 36/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.7346 - val_loss: 0.7554\n",
      "Epoch 37/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.7395 - val_loss: 0.7212\n",
      "Epoch 38/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.7175 - val_loss: 0.6044\n",
      "Epoch 39/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.7334 - val_loss: 0.7008\n",
      "Epoch 40/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.7155 - val_loss: 0.7041\n",
      "Epoch 41/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.7252 - val_loss: 0.7130\n",
      "Epoch 42/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.7255 - val_loss: 0.7422\n",
      "Epoch 43/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.7048 - val_loss: 0.6616\n",
      "Epoch 44/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6867 - val_loss: 0.7296\n",
      "Epoch 45/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6761 - val_loss: 0.6712\n",
      "Epoch 46/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6807 - val_loss: 0.6759\n",
      "Epoch 47/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.7107 - val_loss: 0.7157\n",
      "Epoch 48/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6778 - val_loss: 0.7347\n",
      "Epoch 49/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6875 - val_loss: 0.6196\n",
      "Epoch 50/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.7006 - val_loss: 0.6399\n",
      "Epoch 51/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6882 - val_loss: 0.5981\n",
      "Epoch 52/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6749 - val_loss: 0.6922\n",
      "Epoch 53/100\n",
      "1851/1851 [==============================] - 0s 5us/step - loss: 0.6675 - val_loss: 0.6446\n",
      "Epoch 54/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6859 - val_loss: 0.6731\n",
      "Epoch 55/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6864 - val_loss: 0.6268\n",
      "Epoch 56/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6590 - val_loss: 0.6798\n",
      "Epoch 57/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6519 - val_loss: 0.5608\n",
      "Epoch 58/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6752 - val_loss: 0.7029\n",
      "Epoch 59/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6518 - val_loss: 0.6640\n",
      "Epoch 60/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6606 - val_loss: 0.6351\n",
      "Epoch 61/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6701 - val_loss: 0.5687\n",
      "Epoch 62/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6589 - val_loss: 0.7246\n",
      "Epoch 63/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6532 - val_loss: 0.6266\n",
      "Epoch 64/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6479 - val_loss: 0.7124\n",
      "Epoch 65/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6505 - val_loss: 0.5104\n",
      "Epoch 66/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6675 - val_loss: 0.7237\n",
      "Epoch 67/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6509 - val_loss: 0.6118\n",
      "Epoch 68/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6391 - val_loss: 0.5359\n",
      "Epoch 69/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6507 - val_loss: 0.5927\n",
      "Epoch 70/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6471 - val_loss: 0.6391\n",
      "Epoch 71/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6551 - val_loss: 0.6201\n",
      "Epoch 72/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6440 - val_loss: 0.5840\n",
      "Epoch 73/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6354 - val_loss: 0.6055\n",
      "Epoch 74/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6367 - val_loss: 0.6892\n",
      "Epoch 75/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6226 - val_loss: 0.5322\n",
      "Epoch 76/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6423 - val_loss: 0.6043\n",
      "Epoch 77/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6352 - val_loss: 0.6162\n",
      "Epoch 78/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6132 - val_loss: 0.5878\n",
      "Epoch 79/100\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6304 - val_loss: 0.4499\n",
      "Epoch 80/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6450 - val_loss: 0.5842\n",
      "Epoch 81/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6373 - val_loss: 0.6214\n",
      "Epoch 82/100\n",
      "1851/1851 [==============================] - 0s 4us/step - loss: 0.6277 - val_loss: 0.5957\n",
      "Epoch 83/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6236 - val_loss: 0.6240\n",
      "Epoch 84/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6155 - val_loss: 0.6516\n",
      "Epoch 85/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6215 - val_loss: 0.7057\n",
      "Epoch 86/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.5949 - val_loss: 0.5922\n",
      "Epoch 87/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6193 - val_loss: 0.4812\n",
      "Epoch 88/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6158 - val_loss: 0.6253\n",
      "Epoch 89/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6203 - val_loss: 0.6525\n",
      "Epoch 90/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6040 - val_loss: 0.5216\n",
      "Epoch 91/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6239 - val_loss: 0.6255\n",
      "Epoch 92/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6082 - val_loss: 0.5663\n",
      "Epoch 93/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6066 - val_loss: 0.6362\n",
      "Epoch 94/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6049 - val_loss: 0.6551\n",
      "Epoch 95/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.6080 - val_loss: 0.6260\n",
      "Epoch 96/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.5880 - val_loss: 0.5015\n",
      "Epoch 97/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.5928 - val_loss: 0.6632\n",
      "Epoch 98/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.5982 - val_loss: 0.5195\n",
      "Epoch 99/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.5945 - val_loss: 0.6186\n",
      "Epoch 100/100\n",
      "1851/1851 [==============================] - 0s 3us/step - loss: 0.5932 - val_loss: 0.5434\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_28 (Dense)             (None, 7)                 147       \n",
      "_________________________________________________________________\n",
      "batch_normalization_7 (Batch (None, 7)                 28        \n",
      "_________________________________________________________________\n",
      "activation_7 (Activation)    (None, 7)                 0         \n",
      "_________________________________________________________________\n",
      "dropout_7 (Dropout)          (None, 7)                 0         \n",
      "_________________________________________________________________\n",
      "dense_29 (Dense)             (None, 1)                 8         \n",
      "=================================================================\n",
      "Total params: 183\n",
      "Trainable params: 169\n",
      "Non-trainable params: 14\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "from keras.layers import Dense, Dropout,Activation,BatchNormalization\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "hidden_par=7\n",
    "input_dim= x.shape[1]\n",
    "\n",
    "model = Sequential()\n",
    "model.add(Dense(hidden_par, input_dim=input_dim, init='uniform',\n",
    "                W_regularizer=reg,\n",
    "                bias_regularizer=reg\n",
    "               ))\n",
    "model.add(BatchNormalization())\n",
    "model.add(Activation('relu'))\n",
    "model.add(Dropout(0.5))\n",
    "\n",
    "model.add(Dense(1, activation='sigmoid', input_dim=(hidden_par,),\n",
    "               W_regularizer=reg,\n",
    "                bias_regularizer=reg))\n",
    "model.compile(optimizer='rmsprop', loss='binary_crossentropy')\n",
    "\n",
    "model.fit(x, y, nb_epoch=100,batch_size=1000, validation_data=(x_val, y_val))\n",
    "\n",
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[351   0]\n",
      " [ 25   0]]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "-0.3324468085106383"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred = model.predict(x_holdout).astype(int)\n",
    "my_custom_loss_func(y_holdout,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
